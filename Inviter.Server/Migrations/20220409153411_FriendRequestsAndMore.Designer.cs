// <auto-generated />
using System;
using Inviter.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Inviter.Server.Migrations
{
    [DbContext(typeof(InviterContext))]
    [Migration("20220409153411_FriendRequestsAndMore")]
    partial class FriendRequestsAndMore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Inviter.Server.Models.Invite", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Instant?>("End")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end");

                    b.Property<decimal>("FromID")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("from_id");

                    b.Property<decimal[]>("Lobby")
                        .IsRequired()
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("lobby");

                    b.Property<Instant>("Start")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal>("ToID")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("to_id");

                    b.HasKey("ID")
                        .HasName("pk_invites");

                    b.HasIndex("FromID")
                        .HasDatabaseName("ix_invites_from_id");

                    b.HasIndex("ToID")
                        .HasDatabaseName("ix_invites_to_id");

                    b.ToTable("invites", (string)null);
                });

            modelBuilder.Entity("Inviter.Server.Models.User", b =>
                {
                    b.Property<decimal>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("id");

                    b.Property<bool>("AllowFriendRequests")
                        .HasColumnType("boolean")
                        .HasColumnName("allow_friend_requests");

                    b.Property<bool>("AllowInvitesFromEveryone")
                        .HasColumnType("boolean")
                        .HasColumnName("allow_invites_from_everyone");

                    b.Property<string>("Country")
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<Instant>("LastSeen")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_seen");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("profile_picture");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("ID")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("UserUser", b =>
                {
                    b.Property<decimal>("FriendRequestsID")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("friend_requests_id");

                    b.Property<decimal>("FriendsID")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("friends_id");

                    b.HasKey("FriendRequestsID", "FriendsID")
                        .HasName("pk_user_user");

                    b.HasIndex("FriendsID")
                        .HasDatabaseName("ix_user_user_friends_id");

                    b.ToTable("user_user", (string)null);
                });

            modelBuilder.Entity("Inviter.Server.Models.Invite", b =>
                {
                    b.HasOne("Inviter.Server.Models.User", "From")
                        .WithMany()
                        .HasForeignKey("FromID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_invites_users_from_id");

                    b.HasOne("Inviter.Server.Models.User", "To")
                        .WithMany()
                        .HasForeignKey("ToID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_invites_users_to_id");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("UserUser", b =>
                {
                    b.HasOne("Inviter.Server.Models.User", null)
                        .WithMany()
                        .HasForeignKey("FriendRequestsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_user_users_friend_requests_id");

                    b.HasOne("Inviter.Server.Models.User", null)
                        .WithMany()
                        .HasForeignKey("FriendsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_user_users_friends_id");
                });
#pragma warning restore 612, 618
        }
    }
}
